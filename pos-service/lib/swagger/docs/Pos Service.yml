openapi: "3.0.2"
info:
  title: API Title
  version: "1.0"
servers:
  - url: https://{server_url}/menu
  - url: https://{server_url}/payment
tags:
  - name: "Menu"
    description: "메뉴 API"
  - name: "Payment"
    description: "거래내역 API"

components:
  parameters:
    menu_id:
      name: menu_id
      in: path
      required: true
      description: "{ menu_id }"
      schema:
        type: string
        example: 1234
    company_number:
      name: company_number
      in: path
      required: true
      description: "{ company_number }"
      schema:
        type: string
        example: 1234567890
    include:
      name: include
      in: query
      required: false
      description: 해당 텍스트가 포함된 컬럼 조회
      schema:
        type: string
        default: null
        example: 삼성전자
    orderby:
      name: orderby
      in: query
      required: false
      description: 특정 컬럼으로 정렬
      schema:
        type: string
        default: primary_key
    desc:
      name: desc
      in: query
      required: false
      description: "내림 차순으로 정렬 (default: false)"
      schema:
        type: boolean
        default: false
        example: true
    count:
      name: count
      in: query
      required: false
      description: "한 페이지에 몇개의 데이터를 조회할지"
      schema:
        type: number
        default: 10
        example: 30
    page:
      name: page
      in: query
      required: false
      description: "몇 페이지를 조회할지"
      schema:
        type: number
        default: 1
        example: 3
    start:
      name: start
      in: query
      required: false
      description: 시작 날짜 (YYYY-MM-DD) [포함 payment_time >= start]
      schema:
        type: string
        example: "2021-05-19"
        default: 오늘
    end:
      name: end
      in: query
      required: false
      description: 종료 날짜 (YYYY-MM-DD) [포함하지 않음 payment_time < end]
      schema:
        type: string
        example: "2021-05-30"
        default: null

  schemas:
    MenuResponse:
      type: object
      properties:
        menu_id:
          description: 메뉴 ID
          type: string
        company_number:
          description: 사업자 등록번호
          type: string
        menu_name:
          description: 메뉴 이름
          type: string
        menu_value:
          description: 메뉴 가격
          type: string
        regi_date:
          description: 등록 날짜
          type: string

    MenuRequest:
      type: object
      properties:
        company_number:
          description: 사업자 등록번호
          type: string
        menu_name:
          description: 메뉴 이름
          type: string
        menu_value:
          description: 메뉴 가격
          type: string
        regi_date:
          description: 등록 날짜
          type: string
      example:
        menu_name: 떡볶이
        menu_value: 5000
        regi_date: "2020-03-31"

    PayemntResponse:
      type: array
      items:
        properties:
          payment_group_id:
            description: 결제 그룹 ID
            type: string
          sale:
            description: 쿠폰 사용 금액
            type: number
          sum:
            description: 물건 합산 금액
            type: number
          total:
            description: 전체 계산 금액
            type: number
          company_number:
            description: 사업자 등록번호
            type: string
          payment_time:
            description: 결제 시간 (YYYY-MM-DD HH:mm:ss)
            type: string
          items:
            description: 결제한 물품들
            type: array
            items:
              type: object
              properties:
                payment_id:
                  description: 결제 ID
                  type: number
                menu_id:
                  description: 메뉴 ID
                  type: number
                payment_value:
                  description: 물건 가격
                  type: number
                payment_count:
                  description: 물건 개수
                  type: number

    PaymentRequest:
      type: object
      properties:
        payment_info:
          type: object
          properties:
            sale:
              description: 쿠폰 사용 금액
              type: number
            sum:
              description: 물건 합계
              type: number
            total:
              description: 총 결제 금액
              type: number
            payment_time:
              description: 결제 시간 (YYYY-MM-DD HH:mm:ss)
              type: string
              example: YYYY-MM-DD HH:mm:ss
        payment_items:
          type: array
          items:
            type: object
            properties:
              menu_id:
                description: 메뉴 ID
                type: number
              payment_count:
                description: 결제 개수
                type: number
              payment_value:
                description: 결제 금액
                type: number

  requestBodies:
    registerMenu:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/MenuRequest"
    editMenu:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/MenuRequest"
    registerPayment:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/PaymentRequest"

  responses:
    success:
      description: 요청 성공
    parameter_error:
      description: 요청한 파라미터(paths || query || requestBody)에 문제가 있습니다.
    not_login_error:
      description: 로그인이 되어있지 않습니다.
    not_found_error:
      description: 요청한 리소스가 존재하지  않습니다.
    internal_server_error:
      description: 서버에서 문제가 발생했습니다. 이 에러가 표시되는 경우 개발자에게 보고해주세요.

paths:
  /payment/{company_number}:
    get:
      tags:
        - "Payment"
      description: 결제 내역을 조회합니다. (start, end가 지정되지 않으면 당일 기록만)
      summary: 결제 내역 조회
      parameters:
        - $ref: "#/components/parameters/company_number"
        - $ref: "#/components/parameters/orderby"
        - $ref: "#/components/parameters/desc"
        - $ref: "#/components/parameters/count"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/start"
        - $ref: "#/components/parameters/end"
      responses:
        "200":
          description: 결제 내역 반환
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PayemntResponse"
        "400":
          $ref: "#/components/responses/parameter_error"
        "401":
          description: 인증되지 않은 사용자
        "500":
          $ref: "#/components/responses/internal_server_error"
    post:
      tags:
        - "Payment"
      description: 결제 내역을 추가합니다.
      summary: 결제 내역 추가
      parameters:
        - $ref: "#/components/parameters/company_number"
      requestBody:
        $ref: "#/components/requestBodies/registerPayment"
      responses:
        "200":
          $ref: "#/components/responses/success"
        "400":
          $ref: "#/components/responses/parameter_error"
        "401":
          $ref: "#/components/responses/not_login_error"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /menu/{company_number}:
    get:
      description: 해당 업체의 모든 메뉴를 반환합니다.
      summary: 메뉴 조회
      tags:
        - "Menu"
      parameters:
        - $ref: "#/components/parameters/company_number"
      responses:
        "200":
          description: "조회 성공"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MenuResponse"
        "400":
          $ref: "#/components/responses/parameter_error"
        "401":
          $ref: "#/components/responses/not_login_error"
        "500":
          $ref: "#/components/responses/internal_server_error"
    post:
      description: 메뉴를 등록합니다.
      summary: 메뉴 등록
      tags:
        - "Menu"
      parameters:
        - $ref: "#/components/parameters/company_number"
      requestBody:
        $ref: "#/components/requestBodies/registerMenu"
      responses:
        "200":
          $ref: "#/components/responses/success"
        "400":
          $ref: "#/components/responses/parameter_error"
        "401":
          $ref: "#/components/responses/not_login_error"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /menu/{menu_id}:
    delete:
      description: 메뉴를 삭제합니다.
      summary: 메뉴 삭제
      tags:
        - "Menu"
      parameters:
        - $ref: "#/components/parameters/menu_id"
      responses:
        "200":
          $ref: "#/components/responses/success"
        "400":
          $ref: "#/components/responses/parameter_error"
        "401":
          $ref: "#/components/responses/not_login_error"
        "500":
          $ref: "#/components/responses/internal_server_error"

    patch:
      description: 메뉴를 수정합니다. 변경하고 싶은 컬럼만 보내시면 됩니다.
      summary: 메뉴 수정
      tags:
        - "Menu"
      parameters:
        - $ref: "#/components/parameters/menu_id"
      requestBody:
        $ref: "#/components/requestBodies/editMenu"
      responses:
        "200":
          $ref: "#/components/responses/success"
        "400":
          $ref: "#/components/responses/parameter_error"
        "401":
          $ref: "#/components/responses/not_login_error"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /menu:
    get:
      description: 메뉴를 통합 검색합니다.
      summary: 메뉴 통합 검색
      tags:
        - "Menu"
      parameters:
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/orderby"
        - $ref: "#/components/parameters/desc"
        - $ref: "#/components/parameters/count"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          description: "조회 성공 (배열이 리턴 됩니다.)"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MenuResponse"
        "400":
          $ref: "#/components/responses/parameter_error"
        "401":
          $ref: "#/components/responses/not_login_error"
        "500":
          $ref: "#/components/responses/internal_server_error"
