openapi: "3.0.2"
info:
  title: "User Service"
  version: "1.0.0"
servers:
  - url: "https://localhost:3000"
tags:
  - name: "Common"
    description: "업체 & 일반 유저 공통 API"
  - name: "Social"
    description: "일반 유저 API"
  - name: "Company"
    description: "업체 유저 API"
  - name: "Authentication"
    description: "인증 관련 API"
  - name: "Test"
    description: "테스트용 API (개발 모드에서만 라우팅 됨)"
paths:
  /tests/isLoggedIn:
    post:
      tags:
        - "Test"
      summary: 로그인 여부 확인 (테스트 용)
      description: 로그인 여부 확인
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: jwt 토큰
              example:
                token: "jwt token 값"
      responses:
        "200":
          description: OK
        "403":
          description: 인증 실패
  /authentication/login:
    post:
      tags:
        - "Authentication"
      summary: "로그인"
      description: hello
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                plain_password:
                  type: string
              example:
                email: "sample@example.com"
                plain_password: "abcd1234"
      responses:
        "200":
          description: 토큰, 회원 등급, 토큰 만료일(ms) (만료전에 refresh 요청을 보내야 함)
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: jwt 토큰
                  type:
                    type: string
                    description: "user | company | admin"
                  expiresIn:
                    type: number
                    description: 만료시간 (7200000ms = 2h, expiresIn 이내로 refresh 요청을 보내주세요)
                example:
                  token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiLvv71z77-9cEd8Z--_vW5tIiwiZW1haWwiOiJmb3JtYWlsMDAwMUBnbWFpbC5jb20iLCJhZG1pbiI6ZmFsc2UsImlhdCI6MTYxNzc5NDUzOCwiZXhwIjoxNjE3ODAxNzM4LCJpc3MiOiJkaWdpY3UiLCJzdWIiOiJ1c2VyTG9naW4ifQ.iHyBG0JeuaBMTdPNbx_XdRQBHYeXH30PzTUp0ZFLP4A"
                  type: "company"
                  expiresIn: 7200000
        "403":
          description: 아이디 또는 패스워드가 다릅니다.
        "500":
          description: 서버 에러
  /authentication/login/refresh:
    post:
      tags:
        - "Authentication"
      summary: "로그인 갱신 요청"
      description: 새롭게 토큰을 발급합니다. 기존 토큰은 클라이언트에서 지워주세요.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: jwt 토큰
              example:
                token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiLvv71z77-9cEd8Z--_vW5tIiwiZW1haWwiOiJmb3JtYWlsMDAwMUBnbWFpbC5jb20iLCJhZG1pbiI6ZmFsc2UsImlhdCI6MTYxNzc5NDUzOCwiZXhwIjoxNjE3ODAxNzM4LCJpc3MiOiJkaWdpY3UiLCJzdWIiOiJ1c2VyTG9naW4ifQ.iHyBG0JeuaBMTdPNbx_XdRQBHYeXH30PzTUp0ZFLP4A"
      responses:
        "200":
          description: 토큰, 회원 등급, 토큰 만료일(ms) (만료전에 refresh 요청을 보내야 함)
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: jwt 토큰
                  type:
                    type: string
                    description: "user | company | admin"
                  expiresIn:
                    type: number
                    description: 만료시간 (7200000ms = 2h, expiresIn 이내로 refresh 요청을 보내주세요)
                example:
                  token: "새로운 토큰 번호"
                  type: "company"
                  expiresIn: 7200000
        "403":
          description: 인증에 실패했습니다.
        "500":
          description: 서버 에러
  /users/:email:
    get:
      tags:
        - "Common"
      summary: "유저 정보 조회"
      description: "유저 정보를 조회합니다."
      parameters:
        - name: "email"
          required: true
          description: "유저 이메일"
          in: path
          schema:
            type: string
      responses:
        "200":
          description: "소셜 계정의 경우 소셜 프로필을, 업체 계정의 경우 업체 프로필을 함께 응답합니다. 미디어 타입을 반드시 확인해주세요."
          content:
            (소셜) application/json:
              schema:
                type: object
                properties:
                  email:
                    description: 이메일
                    type: string
                  registration_date:
                    description: 가입일
                    type: string
                  type:
                    description: 회원 유형
                    type: string
                  letter_ok:
                    description: 메일 수신 동의 날짜 (nullable)
                    type: string
                example:
                  "email": "example@site.com"
                  "registration_date": "2021. 3. 24."
                  "type": "company"
                  "letter_ok": "2021. 3. 24."
                  "social_id": "...."
                  "nickname": "...."
                  "profile_image": "https://...."
                  "thumbnail_image": "https://...."
            (업체) application/json:
              schema:
                type: object
                properties:
                  email:
                    description: 이메일
                    type: string
                  registration_date:
                    description: 가입일
                    type: string
                  type:
                    description: 회원 유형
                    type: string
                  letter_ok:
                    description: 메일 수신 동의 날짜 (nullable)
                    type: string
                example:
                  "email": "example@site.com"
                  "registration_date": "2021. 3. 24."
                  "type": "company"
                  "letter_ok": "2021. 3. 24."
                  "company_number": "1248100998"
                  "company_name": "삼성전자 주식회사"
                  "company_phone": "0222550114"
                  "company_address": "수원시 영통구 삼성로 129"
                  "company_owner": "이재용"
                  "company_homepage": "https://samsung.com/"
        "404":
          description: "해당 계정이 존재하지 않습니다. null을 응답합니다."
          content:
            application/json:
              schema:
                type: object
                example: null
        "500":
          description: 서버 에러

  /users/company/:companyNumber:
    get:
      tags:
        - "Company"
      summary: "업체 조회"
      description: "사업자등록번호로 업체를 조회합니다."
      parameters:
        - name: "companyNumber"
          required: true
          description: "사업자 등록번호"
          in: path
          schema:
            type: string
      responses:
        "200":
          description: "업체 정보를 리턴합니다."
          content:
            application/json:
              schema:
                type: object
                properties:
                  company_number:
                    description: "사업자등록번호"
                    type: string
                  company_name:
                    description: "업체 이름"
                    type: string
                  company_phone:
                    description: "업체 번호"
                    type: string
                  company_address:
                    description: "업체 주소"
                    type: string
                  company_owner:
                    description: "사업자 이름"
                    type: string
                  company_homepage:
                    description: "업체 홈페이지"
                    type: string
                example:
                  company_number: "1248100998"
                  company_name: "삼성전자 주식회사"
                  company_phone: "0222550114"
                  company_address: "수원시 영통구 삼성로 129"
                  company_owner: "이재용"
                  company_homepage: "https://samsung.com/"
        "500":
          description: "서버 에러"

  /authentication/:email?type={type}':
    get:
      tags:
        - "Authentication"
      summary: "이메일 인증 페이지 요청"
      description: "이 링크는 POST /users/company 완료시 메일로 자동 발송됩니다. 따라서 별로도 사용할 필요 없습니다."
      parameters:
        - name: "email"
          required: true
          description: "유저 이메일"
          in: path
          schema:
            type: string
        - name: "type"
          required: true
          description: "?type=reg"
          in: query
          schema:
            type: string
      responses:
        "200":
          description: 요청이 완료되었습니다. 페이지를 렌더링 합니다.
        "400":
          description: 요청 파라미터가 잘못되었습니다.
        "500":
          description: 서버 에러
    post:
      tags:
        - "Authentication"
      summary: "패스워드 변경 토큰 발급 요청"
      description: "패스워드 변경 토큰 발급 요청을 합니다."
      parameters:
        - name: "email"
          required: true
          description: "유저 이메일"
          in: path
          schema:
            type: string
        - name: "type"
          required: true
          description: "?type=pwd"
          in: query
          schema:
            type: string
      responses:
        "200":
          description: "토큰을 반환합니다."
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    description: "비밀번호 변경에 사용되는 토큰"
                    type: string
                example:
                  token: "BmNjzq3ntqLdqKn9wVQtib8bnqjmIz"
        "400":
          description: "요청에 실패했습니다."
        "500":
          description: "서버 에러"
    put:
      tags:
        - "Authentication"
      summary: "이메일 인증 또는 패스워드 변경"
      description: "이메일 인증 또는 패스워드 변경을 진행합니다."
      parameters:
        - name: "email"
          required: true
          description: "유저 이메일"
          in: path
          schema:
            type: string
        - name: "type"
          required: true
          description: "?type=reg 또는 ?type=pwd"
          in: query
          schema:
            type: string
      responses:
        "200":
          description: "요청이 완료되었습니다."
        "400":
          description: "요청에 실패했습니다."
        "500":
          description: "서버 에러"

  /users/company:
    post:
      tags:
        - "Company"
      summary: "업체 등록"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reg_info:
                  description: "기본 등록 정보"
                  type: object
                  properties:
                    email:
                      description: "이메일"
                      type: string
                    plain_password:
                      description: "회원 비밀번호"
                      type: string
                    letter_ok:
                      description: "이메일 수신 동의 여부"
                      type: boolean
                company_info:
                  description: "업체 등록 정보"
                  type: object
                  properties:
                    company_number:
                      description: "사업자등록번호"
                      type: string
                    company_name:
                      description: "업체 이름"
                      type: string
                    company_phone:
                      description: "업체 번호"
                      type: string
                    company_address:
                      description: "업체 주소"
                      type: string
                    company_owner:
                      description: "사업자 이름"
                      type: string
                    company_homepage:
                      description: "업체 홈페이지"
                      type: string
              example:
                reg_info:
                  email: "example@site.com"
                  plain_password: "1234567890"
                  letter_ok: true
                company_info:
                  company_number: "1248100998"
                  company_name: "삼성전자 주식회사"
                  company_phone: "0222550114"
                  company_address: "수원시 영통구 삼성로 129"
                  company_owner: "이재용"
                  company_homepage: "https://samsung.com/"
      responses:
        "200":
          description: "등록 성공. 반드시 유저에게 이메일 확인을 요청하세요."
        "400":
          description: "등록 실패"
        "500":
          description: "서버 에러"

  /users/:email/checked:
    get:
      tags:
        - "Common"
      summary: "이메일 인증되었는지 확인"
      description: "이메일 인증이 되었는지 확인합니다."
      parameters:
        - name: "email"
          required: true
          description: "이메일"
          in: path
          schema:
            type: string
      responses:
        "200":
          description: "인증 여부"
          content:
            application/json:
              schema:
                type: object
                properties:
                  is_checked:
                    type: boolean
        "500":
          description: "서버 에러"
